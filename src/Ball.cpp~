#include "../include/Ball.hh"

#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <cmath>
#include <iostream>

Ball::Ball(float x, float y, float r, float m, sf::Color color){
  fDisx = x;
  fDisy = y;
  deg2rad = 3.1415 / 180.0;

  fRadius = r;
  fMass = m;
  fColor = color;

  fRow++;
  InitializeBall();
}

void Ball::InitializeBall(){
  srand(time(NULL));

  fBall.setRadius( fRadius );
  sf::FloatRect temp = fBall.getLocalBounds();
  fBall.setOrigin( temp.width/2.0, temp.height/2.0 );
  fBall.setFillColor( fColor );

 // Initialize random nhat and velocity:
  float theta = float(rand()%361);
  fNhat = sf::Vector2f( cos(theta*deg2rad), sin(theta*deg2rad) );


  fPos = sf::Vector2f( 100,100 );
  fBall.setPosition( fPos );
  fVel = float( rand()%10 + 11 ) / 10.0; //11 - 20
}

void Ball::MoveBall(){
  sf::Vector2f pos = fBall.getPosition();

  if( pos.x + fRadius >= fDisx - fWallThick ){
    fNhat = sf::Vector2f( -fNhat.x, fNhat.y );
  }
  if( pos.x - fRadius <= fWallThick ){
    fNhat = sf::Vector2f( -fNhat.x, fNhat.y );
  }
  if( pos.y + fRadius >= fDisy - fWallThick ) {
    fNhat = sf::Vector2f( fNhat.x, -fNhat.y );
  }
  if( pos.y - fRadius <= fWallThick ){
    fNhat = sf::Vector2f( fNhat.x, -fNhat.y );
  }

  fBall.move( fVel*fNhat );
}

void Ball::draw(sf::RenderTarget& target, sf::RenderStates) const {
  target.draw( fBall );
}
